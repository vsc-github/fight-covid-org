{"version":3,"sources":["logo.svg","components/details-input/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DetailsInput","state","onSubmitForm","bind","form","document","forms","borrower","formData","FormData","object","forEach","value","key","console","log","id","className","class","for","name","type","placeholder","required","checked","href","onClick","this","Component","App","src","alt","title","role","tabindex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5842bff7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n// import axios from 'axios';\n\n\nclass DetailsInput extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n        };\n\n        this.onSubmitForm = this.onSubmitForm.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    onSubmitForm() {\n        const form = document.forms.borrower;\n        const formData = new FormData(form);\n\n        var object = {};\n        formData.forEach((value, key) => { object[key] = value });\n        console.log(\"JSON SSS\",object);\n\n    }\n\n    render() {\n\n        return (<form id=\"borrower\">\n\n            <div className=\"box\">\n\n                <fieldset>\n\n\n                    <legend>Personal Details</legend>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"\">Full name</label>\n                        <div class=\"control\">\n                            <input id=\"\" name=\"\" type=\"text\" placeholder=\"eg. Douglas Smith\" class=\"input \" required=\"\" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"email\">Email address</label>\n                        <div class=\"control\">\n                            <input id=\"email\" name=\"email\" type=\"text\" placeholder=\"eg. youremail@gmail.com\" class=\"input \" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"phone\">Phone number</label>\n                        <div class=\"control\">\n                            <input id=\"phone\" name=\"phone\" type=\"text\" placeholder=\"eg. 8959076776\" class=\"input \" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"city\">City</label>\n                        <div class=\"control\">\n                            <input id=\"city\" name=\"city\" type=\"text\" placeholder=\"eg. current city of stay\" class=\"input \" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"country\">Country</label>\n                        <div class=\"control\">\n                            <input id=\"country\" name=\"country\" type=\"text\" placeholder=\"eg. USA, India, Italy\" class=\"input \" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"zip\">Zip Code</label>\n                        <div class=\"control\">\n                            <input id=\"zip\" name=\"zip\" type=\"text\" placeholder=\"eg. 90201\" class=\"input \" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"address\">Current Address</label>\n                        <div class=\"control\">\n                            <textarea class=\"textarea\" id=\"address\" name=\"address\"></textarea>\n                        </div>\n                    </div>\n\n                </fieldset>\n\n            </div>\n\n            <div className=\"box\">\n\n                <fieldset>\n\n\n                    <legend>Educational Details</legend>\n\n\n                    <fieldset>\n\n\n                        <div class=\"field\">\n                            <label class=\"label\" for=\"\">Are you currently a student?</label>\n                            <div class=\"control\">\n                                <label class=\"radio inline\" for=\"student-0\">\n                                    <input type=\"radio\" name=\"student\" id=\"student-0\" value=\"Yes\" checked=\"checked\" />\n                                    Yes\n    </label>\n                                <label class=\"radio inline\" for=\"student-1\">\n                                    <input type=\"radio\" name=\"student\" id=\"student-1\" value=\"No\" />\n                                    No\n    </label>\n                            </div>\n                        </div>\n\n\n                        <div class=\"field\">\n                            <label class=\"label\" for=\"college\">Highest level of education</label>\n                            <div class=\"control\">\n                                <input id=\"college\" name=\"college\" type=\"text\" placeholder=\"eg. HSC, graduate, post graduate, etc\" class=\"input \" />\n\n                            </div>\n                        </div>\n\n\n                        <div class=\"field\">\n                            <label class=\"label\" for=\"field\">Field of study</label>\n                            <div class=\"control\">\n                                <input id=\"field\" name=\"field\" type=\"text\" placeholder=\"eg. farming, technology, foods and services etc\" class=\"input \" />\n\n                            </div>\n                        </div>\n\n\n                        <div class=\"field\">\n                            <label class=\"label\" for=\"skills\">Please enter as many skills you have</label>\n                            <div class=\"control\">\n                                <input id=\"skills\" name=\"skills\" type=\"text\" placeholder=\"eg. cooking, cleaning, driving, accounting, typing etc\" class=\"input \" />\n\n                            </div>\n                        </div>\n\n                    </fieldset>\n\n\n\n                </fieldset>\n\n            </div>\n\n            <div className=\"box\">\n\n                <fieldset>\n\n\n                    <legend>Empolyment Details</legend>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"jobtitle\">Job Title</label>\n                        <div class=\"control\">\n                            <input id=\"jobtitle\" name=\"jobtitle\" type=\"text\" class=\"input \" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"jobtype\">Employment Type</label>\n                        <div class=\"control\">\n                            <input id=\"jobtype\" name=\"jobtype\" type=\"text\" class=\"input \" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"company\">Company</label>\n                        <div class=\"control\">\n                            <input id=\"company\" name=\"company\" type=\"text\" class=\"input \" />\n\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"previously\">Were you previously empolyed?</label>\n                        <div class=\"control\">\n                            <label class=\"radio\" for=\"previously-0\">\n                                <input type=\"radio\" name=\"previously\" id=\"previously-0\" value=\"Yes\" checked=\"checked\" />\n                                Yes\n    </label>\n                            <label class=\"radio\" for=\"previously-1\">\n                                <input type=\"radio\" name=\"previously\" id=\"previously-1\" value=\"No\" />\n                                No\n    </label>\n                        </div>\n                    </div>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"remote\">Are you open for remote work?</label>\n                        <div class=\"control\">\n                            <label class=\"radio\" for=\"remote-0\">\n                                <input type=\"radio\" name=\"remote\" id=\"remote-0\" value=\"Yes\" checked=\"checked\" />\n                                Yes\n    </label>\n                            <label class=\"radio\" for=\"remote-1\">\n                                <input type=\"radio\" name=\"remote\" id=\"remote-1\" value=\"No\" />\n                                No\n    </label>\n                        </div>\n                    </div>\n\n                </fieldset>\n\n\n            </div>\n\n            <div className=\"box\">\n\n                <fieldset>\n\n\n                    <legend>Financial Details</legend>\n\n\n                    <div class=\"field\">\n                        <label class=\"label\" for=\"payment\">Enter Financial Details (UPI, paytm, venmo, cashapp, etc)</label>\n                        <div class=\"control\">\n                            <textarea class=\"textarea\" id=\"payment\" name=\"payment\"></textarea>\n                        </div>\n                    </div>\n\n                </fieldset>\n\n\n\n            </div>\n\n            <div class=\"buttons is-centered submit\">\n                <div class=\"button is-primary is-inverted is-large\" href=\"\" onClick={this.onSubmitForm}>Submit</div>\n            </div>\n\n        </form>\n        );\n    }\n}\n\nexport default DetailsInput;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport DetailsInput from './components/details-input'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <nav class=\"navbar is-spaced\">\n        <div class=\"container\">\n          <div class=\"navbar-brand\">\n            <div class=\"navbar-item\">\n              <a href=\"/\" className=\"logo\">\n                <img class=\"image\" src=\"https://res.cloudinary.com/diknntl0x/image/upload/v1585200205/fightcovid_n86cam.svg\" alt=\"Page Speed monitoring\" title=\"Web Performance Monitoring Service\" />\n                <span>fightcovid.org</span>\n              </a>\n            </div>\n            <div role=\"button\" class=\"navbar-burger burger\" tabindex=\"0\"><span></span><span></span><span></span></div>\n          </div>\n          <div class=\"navbar-menu\">\n            <div class=\"navbar-end\">\n              {/* <div class=\"navbar-item\"><a class=\"navbar-item\" href=\"/features\">Features</a><a class=\"navbar-item\" href=\"/pricing\">Pricing</a><a class=\"navbar-item\" title=\"Web Performance Blog\" href=\"/web-performance-blog\">Blog</a><a class=\"navbar-item\" href=\"/contact\">Contact</a></div> */}\n              <div class=\"navbar-item\">\n                <div class=\"buttons\"><a class=\"button is-light\" href=\"#fill-form\">Get Help</a></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <section class=\"hero is-medium\">\n        <div class=\"hero-body\">\n          <div class=\"container\">\n            <h1 class=\"title\">\n              Get help in these tough times\n      </h1>\n            <h2 class=\"subtitle\">\n              Fightcovid.org is a non-profit that expands access to capital for those affected with COVID19 around the world. More than 2.5 million people have raised over $1 billion on Kiva. Could you be next?\n      </h2>\n            <div class=\"buttons is-centered\">\n              <a class=\"button is-primary is-inverted is-medium\" href=\"#fill-form\">Get Started</a>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section class=\"section hero is-block is-relative is-small details\" id=\"fill-form\">\n        <div class=\"container\">\n\n          \n\n            <DetailsInput />\n\n            \n\n\n        </div>\n      </section>\n\n      <footer class=\"footer\">\n        <div class=\"content has-text-centered\">\n          <p>\n            By Waylo COVID19 Task Force.\n    </p>\n        </div>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}